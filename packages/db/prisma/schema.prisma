generator client {
  provider = "prisma-client-js"
  output   = "../../../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  OWNER
  ADMIN
  MEMBER
}

model User {
  id           String       @id @default(uuid())
  email        String       @unique
  name         String?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  memberships  Membership[]
}

model Org {
  id           String       @id @default(uuid())
  name         String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  memberships  Membership[]
}

model Membership {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  org       Org      @relation(fields: [orgId], references: [id])
  orgId     String
  role      Role     @default(MEMBER)
  createdAt DateTime @default(now())

  @@unique([userId, orgId])
  @@index([orgId])
}

model Contact {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  email     String   @unique
  createdAt DateTime @default(now())
}

model EmailTemplate {
  id          String                   @id @default(uuid())
  name        String
  contentJson Json
  createdBy   String
  updatedAt   DateTime                @updatedAt
  snapshots   EmailTemplateSnapshot[]
  campaigns   EmailCampaign[]
}

model EmailTemplateSnapshot {
  id         String        @id @default(uuid())
  template   EmailTemplate @relation(fields: [templateId], references: [id])
  templateId String
  html       String
  createdAt  DateTime      @default(now())
}

model EmailCampaign {
  id          String        @id @default(uuid())
  template    EmailTemplate @relation(fields: [templateId], references: [id])
  templateId  String
  subject     String
  fromName    String
  fromEmail   String
  segmentId   String?
  status      String
  scheduledAt DateTime?
  messages    EmailMessage[]
}

model EmailMessage {
  id         String        @id @default(uuid())
  campaign   EmailCampaign @relation(fields: [campaignId], references: [id])
  campaignId String
  recipient  String
  variables  Json
  status     String
  sentAt     DateTime?
}

model EmailAsset {
  id        String @id @default(uuid())
  url       String
  width     Int
  height    Int
  createdBy String
}
